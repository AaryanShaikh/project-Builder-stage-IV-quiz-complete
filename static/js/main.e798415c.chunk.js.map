{"version":3,"sources":["components/HomeComponent.jsx","components/QuizComponent.jsx","components/ResultComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["HomeComponent","Fragment","to","Component","QuizComponent","props","nextQ","setState","qid","state","ques","length","document","getElementById","classList","add","remove","prevQ","quitBtn","clearInterval","intervalId","removeId","sentAns","ans","timer","time","optionSelect","e","span","createElement","answer","target","value","textContent","newAns","appendChild","removeAns","spans","hasChildNodes","removeChild","firstChild","setInterval","bind","className","id","this","question","src","alt","height","onClick","options","ResultComponent","res","filter","toFixed","App","getAns","componentDidMount","axios","get","then","data","console","log","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e798415c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class HomeComponent extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Quiz App</h1>\r\n                <Link to=\"/quiz\"><button>Play</button></Link>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Questions from '../resourses/questions.json'\r\n\r\nexport default class QuizComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            qid: 0,\r\n            time: 250,\r\n            ans: []\r\n        }\r\n        this.intervalId = setInterval(this.timer.bind(this), 1000)\r\n        this.removeId = setInterval(this.removeAns.bind(this), 2000);\r\n    }\r\n\r\n    nextQ = () => {\r\n        this.setState({\r\n            qid: this.state.qid + 1\r\n        })\r\n        if (this.state.qid >= this.props.ques.length - 2) {\r\n            document.getElementById(\"next\").classList.add(\"dis\");\r\n            this.setState({\r\n                qid: this.props.ques.length - 1\r\n            })\r\n        } else {\r\n            document.getElementById(\"prev\").classList.remove(\"dis\");\r\n        }\r\n    }\r\n\r\n    prevQ = () => {\r\n        this.setState({\r\n            qid: this.state.qid - 1\r\n        })\r\n        if (this.state.qid <= 1) {\r\n            document.getElementById(\"prev\").classList.add(\"dis\");\r\n            this.setState({\r\n                qid: 0\r\n            })\r\n        } else {\r\n            document.getElementById(\"next\").classList.remove(\"dis\");\r\n        }\r\n    }\r\n\r\n    quitBtn = () => {\r\n        clearInterval(this.intervalId);\r\n        clearInterval(this.removeId);\r\n        this.props.sentAns(this.state.ans);\r\n    }\r\n\r\n    timer = () => {\r\n        this.setState({\r\n            time: this.state.time - 1\r\n        })\r\n        if (this.state.time < 1) {\r\n            this.quitBtn();\r\n        }\r\n    }\r\n\r\n    optionSelect = (e) => {\r\n        let span = document.createElement(\"span\");\r\n        if (this.props.ques[this.state.qid].answer === e.target.value) {\r\n            span.textContent = \"Correct Answer\";\r\n            span.classList.add(\"yes\");\r\n            let newAns = [...this.state.ans];\r\n            newAns[this.state.qid] = 1;\r\n            this.setState({\r\n                ans: [...newAns]\r\n            })\r\n        } else {\r\n            span.textContent = \"Wrong Answer\";\r\n            span.classList.add(\"no\");\r\n            let newAns = [...this.state.ans];\r\n            newAns[this.state.qid] = -1;\r\n            this.setState({\r\n                ans: [...newAns]\r\n            })\r\n        }\r\n        document.getElementById(\"ans\").appendChild(span);\r\n        this.nextQ()\r\n    }\r\n\r\n    removeAns = () => {\r\n        let spans = document.getElementById(\"ans\");\r\n        if (spans === null) {\r\n            clearInterval(this.removeId);\r\n        } else {\r\n\r\n            if (spans.hasChildNodes()) {\r\n                spans.removeChild(spans.firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"box\">\r\n                <h1>Question</h1>\r\n                <div className=\"ans\" id=\"ans\"></div>\r\n                <div className=\"QueData\">\r\n                    <span>{this.state.qid + 1} of {this.props.ques.length}</span>\r\n                    <span>{this.props.ques[this.state.qid].question}</span>\r\n                    <span>{this.state.time} <img src=\"https://emojipedia-us.s3.amazonaws.com/source/skype/289/twelve-thirty_1f567.png\" alt=\"stopwatch\" height=\"30px\" /></span>\r\n                </div>\r\n                <div className=\"options\">\r\n                    <button onClick={this.optionSelect} value={this.props.ques[this.state.qid].options[0]}>{this.props.ques[this.state.qid].options[0]}</button>\r\n                    <button onClick={this.optionSelect} value={this.props.ques[this.state.qid].options[1]}>{this.props.ques[this.state.qid].options[1]}</button>\r\n                    <button onClick={this.optionSelect} value={this.props.ques[this.state.qid].options[2]}>{this.props.ques[this.state.qid].options[2]}</button>\r\n                    <button onClick={this.optionSelect} value={this.props.ques[this.state.qid].options[3]}>{this.props.ques[this.state.qid].options[3]}</button>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <button onClick={this.prevQ} id=\"prev\" className=\"dis\">Previous</button>\r\n                    <button onClick={this.nextQ} id=\"next\">Next</button>\r\n                    <Link to=\"/result\" onClick={this.quitBtn}>Quit</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class ResultComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ans: [...this.props.sentAns],\r\n            res: \"\"\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"resCont\">\r\n                <div className=\"logo\"></div>\r\n                <h2>Result</h2>\r\n                <div className=\"box resC\">\r\n                    {\r\n                        ((this.state.ans.filter((answer) => {\r\n                            return answer === 1\r\n                        }).length) / (this.state.ans.length) * 100) < 60 ?\r\n                            <h2>You need more practice</h2>\r\n                            :\r\n                            <h2>You did good!!</h2>\r\n                    }\r\n                    <h1>Your Score: {\r\n                        ((this.state.ans.filter((answer) => {\r\n                            return answer === 1\r\n                        }).length) / (this.state.ans.length) * 100).toFixed(2)\r\n                    }%</h1>\r\n                    <div className=\"res\">\r\n                        <div className=\"li\"><span>Total number of questions</span><span>{this.state.ans.length}</span></div>\r\n                        <div className=\"li\"><span>Number of attempted questions</span><span>{\r\n                            this.state.ans.filter((answer) => {\r\n                                return answer !== 0\r\n                            }).length\r\n                        }</span></div>\r\n                        <div className=\"li\"><span>Number of Correct Answers</span><span>{\r\n                            this.state.ans.filter((answer) => {\r\n                                return answer === 1\r\n                            }).length\r\n                        }</span></div>\r\n                        <div className=\"li\"><span>Number of Wrong Answers</span><span>{\r\n                            this.state.ans.filter((answer) => {\r\n                                return answer === -1\r\n                            }).length\r\n                        }</span></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"btns\"><Link to=\"/quiz\">Play Again</Link><Link to=\"/\">Back to Home</Link></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport HomeComponent from './components/HomeComponent';\nimport QuizComponent from './components/QuizComponent';\nimport ResultComponent from './components/ResultComponent';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ans: [],\n      res: \"\",\n      ques: []\n    }\n  }\n  getAns = (newAns) => {\n    this.setState({\n      ans: [...newAns]\n    })\n  }\n  componentDidMount = () => {\n    axios.get('https://my-json-server.typicode.com/Naveen132895/quiz-api/questions')\n      .then((res) => {\n        this.setState({\n          ques: res.data\n        })\n        console.log(this.state.ques)\n      })\n  }\n  render() {\n    if (this.state.ques.length === 0) {\n      return <div className=\"load\">\n        <img src=\"https://raw.githubusercontent.com/AaryanShaikh/project-Builder-stage-IV-quiz-complete/main/load.gif\" alt=\"\" />\n      </div>;\n    } else {\n      return (\n        <div className=\"App\">\n          <Router>\n            <Switch>\n              <Route exact path=\"/\"><HomeComponent /></Route>\n              <Route path=\"/quiz\"><QuizComponent sentAns={this.getAns} ques={this.state.ques} /></Route>\n              <Route path=\"/result\"><ResultComponent sentAns={this.state.ans} /></Route>\n            </Switch>\n          </Router>\n        </div>\n      );\n    }\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}